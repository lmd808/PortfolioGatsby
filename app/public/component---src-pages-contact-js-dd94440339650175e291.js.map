{"version":3,"sources":["webpack:///./src/components/email/email.js","webpack:///./src/pages/contact.js"],"names":["Email","React","useState","state","setState","handleChange","e","target","name","value","method","action","data-netlify","data-netlify-honeypot","onSubmit","preventDefault","data","form","fetch","headers","body","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","console","log","catch","error","type","hidden","onChange","htmlFor","TextInput","id","maxLength","placeholder","TextArea","maxlength","className","styled","input","textarea","Layout","loadable","location","keywords","siteConfig","SEO","title","heroImg","withPrefix","fluid"],"mappings":"gSA6EeA,MAhEf,WAAoB,IAAD,EACSC,IAAMC,SAAS,IAAlCC,EADU,KACHC,EADG,KAGXC,EAAe,SAACC,GAAO,IAAD,EAC1BF,EAAS,OAAD,UAAMD,IAAN,MAAcG,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,MAAvC,MAsBT,OACC,kBAAC,YAAD,KACA,kBAAC,MAAD,KACI,kBAAC,MAAD,KACI,8CACA,0BAAMD,KAAK,UACXE,OAAO,OACPC,OAAO,WACPC,eAAa,OACbC,wBAAsB,YACtBC,SAzBW,SAACR,GACpBA,EAAES,iBACF,IAnBYC,EAmBNC,EAAOX,EAAEC,OACfW,MAAM,IAAK,CACTR,OAAQ,OACRS,QAAS,CAAE,eAAgB,qCAC3BC,MAvBUJ,EAuBG,OAAD,QACV,YAAaC,EAAKI,aAAa,SAC5BlB,GAxBFmB,OAAOC,KAAKP,GAChBQ,KAAI,SAACC,GAAD,OAAYC,mBAAmBD,GAA/B,MAAyCC,mBAAmBV,EAAKS,OACrEE,KAAK,QAyBHC,MAAK,WAdRC,QAAQC,IAAI,YAeTC,OAAM,SAACC,GAAD,OAAWA,OAeZ,2BAAOC,KAAK,SAASzB,KAAK,YAAYC,MAAM,YAC5C,uBAAGyB,QAAM,GACT,uDACyB,2BAAO1B,KAAK,YAAY2B,SAAU9B,MAIvD,2BAAO+B,QAAQ,QAAf,aACA,kBAACC,EAAD,CAAWJ,KAAK,OAAOK,GAAG,eAAeC,UAAU,KAAK/B,KAAK,OAAOgC,YAAY,WAAWL,SAAU9B,IACrG,2BAAO+B,QAAQ,SAAf,UACA,kBAACC,EAAD,CAAWJ,KAAK,QAAQK,GAAG,gBAAgBC,UAAU,KAAK/B,KAAK,QAAQgC,YAAY,mBAAmBL,SAAU9B,IAChH,2BAAO+B,QAAS,SAAhB,gBACA,kBAACC,EAAD,CAAWJ,KAAK,MAAMK,GAAI,oBAAoBC,UAAU,KAAK/B,KAAK,QAAQgC,YAAY,cAAcL,SAAU9B,IAC9G,2BAAO+B,QAAQ,WAAf,qCACA,kBAACK,EAAD,CAAUL,QAAQ,OAAOE,GAAG,cAAc9B,KAAK,UAAUkC,UAAW,MAAMF,YAAc,eAAeL,SAAU9B,IACjH,4BAAQ4B,KAAK,SAASU,UAAU,eAAhC,eAeVN,EAAYO,UAAOC,MAAV,uEAAGD,CAAH,qEAMTH,EAAWG,UAAOE,SAAV,sEAAGF,CAAH,kF,YC5ERG,EAASC,aAAS,kBAAM,+EA+BfJ,6BA7BC,SAAC,GAA6B,IAA3BD,EAA0B,EAA1BA,UAAWM,EAAe,EAAfA,SAEpBC,EAAYC,IAAZD,SACR,OACE,kBAACH,EAAD,CAAQE,SAAUA,GAChB,kBAACG,EAAA,EAAD,CACEC,MALQ,UAMRH,SAAUA,IAGZ,kBAAC,IAAD,CACEI,QAASC,qBAAW,sBACpBF,MAXQ,YAcV,kBAAC,IAAD,CAASV,UAAWA,GAClB,kBAAC,YAAD,CAAWA,UAAU,eAAea,OAAK,GACrC,kBAAC,MAAD,KACA,kBAAC,MAAD,KACI,kBAAC,EAAD,cAUhB,0DAAeZ,CAAf,wD","file":"component---src-pages-contact-js-dd94440339650175e291.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Container, Row, Col } from 'react-awesome-styled-grid'\nimport styles from './animation.css'\n\n\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => `${encodeURIComponent(key)} = ${encodeURIComponent(data[key])}`)\n    .join('&')\n}\n\nfunction  Email () {\n  const [state, setState] = React.useState({})\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value })\n  }\n\n  const thankYou = ()=> {\n    console.log('hello')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const form = e.target\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...state,\n      }),\n    })\n      .then(() => thankYou())\n      .catch((error) => error)\n  }\n\n   return (\n    <Container>\n    <Row>\n        <Col>\n            <h2>Let's Connect!</h2>\n            <form name=\"contact\"\n            method=\"post\"\n            action=\"/thanks/\"\n            data-netlify=\"true\"\n            data-netlify-honeypot=\"bot-field\"\n            onSubmit={handleSubmit}>\n            {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n            <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n            <p hidden>\n            <label>\n                Donâ€™t fill this out: <input name=\"bot-field\" onChange={handleChange} />\n            </label>\n            </p>\n    \n                <label htmlFor=\"name\">Your Name</label>\n                <TextInput type='text' id='contact-name' maxLength='50' name='name' placeholder='Jane Doe' onChange={handleChange} />    \n                <label htmlFor=\"email\">E-mail</label>\n                <TextInput type='email' id='contact-email' maxLength='75' name='email' placeholder='example@test.com' onChange={handleChange} />\n                <label htmlFor= 'phone'>Phone Number</label>\n                <TextInput type='tel' id= 'contact-telephone' maxLength='75' name='email' placeholder='000-000-000' onChange={handleChange} />\n                <label htmlFor='message'>What problem can I solve for you?</label>\n                <TextArea htmlFor='text' id='contact-msg' name='message' maxlength= '500' placeholder = 'Type Away...' onChange={handleChange} />\n                <button type='submit' className=\"neon-button\">Submit</button>\n            </form>\n            \n        </Col>\n        \n        </Row>   \n\n</Container>   \n  ) \n};\n\nexport default Email;\n\n\n\nconst TextInput = styled.input `\n    width: 100%;\n    margin-bottom: 1rem;\n    margin-top: .3rem;\n    margin-left: 0px; \n`\nconst TextArea = styled.textarea `\n    width: 100%;\n    padding: 1rem;\n    margin-bottom: 1rem;\n    margin-top: .3rem;\n    margin-left: 0px; \n`\n ","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { Container, Row, Col } from 'react-awesome-styled-grid'\nimport siteConfig from '../../data/siteConfig'\nimport { withPrefix } from \"gatsby\"\nimport loadable from '@loadable/component'\nimport Hero from '../components/hero'\nimport SEO from '../components/SEO'\nimport Email from '../components/email'\nimport Wrapper from '../components/wrapper'\n\nconst Layout = loadable(() => import('../components/layout'))\n\nconst Contact = ({ className, location }) => {\n  const title = \"Contact\"\n  const { keywords} = siteConfig\n  return (\n    <Layout location={location}>\n      <SEO\n        title={title}\n        keywords={keywords}\n      />\n\n      <Hero\n        heroImg={withPrefix('/images/cover1.png')}\n        title={title}\n      />\n\n      <Wrapper className={className}>\n        <Container className=\"page-content\" fluid>\n            <Row>\n            <Col>\n                <Email/>\n            </Col>\n            \n            </Row>   \n        </Container>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default styled(Contact)`\n  .page-content {\n    max-width: 100%;\n    margin-bottom: 40px;\n  }\n\n`\n"],"sourceRoot":""}