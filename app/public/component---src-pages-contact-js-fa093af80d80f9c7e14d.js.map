{"version":3,"sources":["webpack:///./src/components/thankYou/thankYou.js","webpack:///./src/components/emailLogic/emailLogic.js","webpack:///./src/pages/contact.js"],"names":["submissionStyles","container","minHeight","display","verticalAlign","header","paddingTop","textAlign","subheader","ThankYou","styles","style","subHeader","TextInput","styled","input","TextArea","textarea","EmailLogic","useState","submit","setSubmit","state","setState","handleChange","e","target","name","value","method","action","data-netlify","data-netlify-honeypot","onSubmit","preventDefault","data","form","fetch","headers","body","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","catch","error","type","aria-label","hidden","onChange","htmlFor","id","maxLength","placeholder","x","replace","match","maxlength","className","Layout","loadable","location","keywords","siteConfig","SEO","title","heroImg","withPrefix","fluid"],"mappings":"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","file":"component---src-pages-contact-js-fa093af80d80f9c7e14d.js","sourcesContent":["import React from 'react'\n\n\nconst submissionStyles = {\n    container: {\n        minHeight: '10em',\n        display: 'table-cell',\n        verticalAlign: 'middle'\n    },\n    header:{\n        paddingTop: '10px',\n        textAlign: 'center'\n    },\n    subheader:{\n        paddingTop: '10px',\n        textAlign: 'center'\n    } \n\n\n}\n\nconst ThankYou = () => {\n    return (\n        <div styles={submissionStyles.container}>\n            <h1 style={submissionStyles.header}>Thank you!</h1>\n            <h6 style={submissionStyles.subHeader}>We received your submission and will be in touch shortly.</h6>\n        </div>\n    )\n}\n\n\n\nexport default ThankYou","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Container, Row, Col } from 'react-awesome-styled-grid'\nimport './animation.css'\nimport ThankYou from '../thankYou'\n\n\nconst TextInput = styled.input `\n    width: 100%;\n    margin-bottom: 1rem;\n    margin-top: .3rem;\n    margin-left: 0px; \n`\nconst TextArea = styled.textarea `\n    width: 100%;\n    padding: 1rem;\n    margin-bottom: 1rem;\n    margin-top: .3rem;\n    margin-left: 0px; \n`\n\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => `${encodeURIComponent(key)} = ${encodeURIComponent(data[key])}`)\n    .join('&')\n}\n\nfunction  EmailLogic () {\n  const [submit, setSubmit] = useState(false)\n  const [state, setState] = useState({})\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value })\n  }\n\n  const handleMaskChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value })\n    const x = e.target.value.replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\n      e.target.value = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');  \n}\n\n  const thankYou = ()=> {\n    setSubmit(true)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const form = e.target\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...state,\n      }),\n    })\n      .then(() => thankYou())\n      .catch((error) => error)\n  }\n\n   if (submit === false){\n    return (\n      <Container>\n      <Row>\n          <Col>\n              <h2>Let's Connect!</h2>\n              <form name=\"DevContact\"\n              method=\"Post\"\n              action=\"/thanks/\"\n              data-netlify=\"true\"\n              data-netlify-honeypot=\"bot-field\"\n              onSubmit={handleSubmit}>\n              {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n              <input type=\"hidden\" name=\"form-name\" value=\"contact\" aria-label=\"hidden\"/>\n              <p hidden>\n              <label>\n                  Donâ€™t fill this out: <input name=\"bot-field\" onChange={handleChange} aria-label=\"hidden\"/>\n              </label>\n              </p>\n      \n                  <label htmlFor=\"name\">Your Name</label>\n                  <TextInput type='text' id='contact-name' maxLength='50' name='name' placeholder='Jane Doe' onChange={handleChange} />    \n                  <label htmlFor=\"email\">E-mail</label>\n                  <TextInput type='email' id='contact-email' maxLength='75' name='email' placeholder='example@test.com' onChange={handleChange} />\n                  <label htmlFor= 'phone'>Phone Number</label>\n                  <TextInput type='tel' id= 'contact-telephone' maxLength='75' name='phone' placeholder='(000) 000-000' onChange={handleMaskChange} />\n                  <label htmlFor='message'>What problem can I solve for you?</label>\n                  <TextArea htmlFor='text' id='contact-msg' name='message' maxlength= '500' placeholder = 'Type Away...' onChange={handleChange} />\n                  <button type='submit' className=\"neon-button\">Submit</button>\n              </form>\n              \n          </Col>\n          \n          </Row>   \n  \n  </Container>   \n    )\n   }else if (submit === true) {\n     return <ThankYou/>\n   } \n};\n\nexport default EmailLogic;\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Container, Row, Col } from 'react-awesome-styled-grid'\nimport siteConfig from '../../data/siteConfig'\nimport { withPrefix } from \"gatsby\"\nimport loadable from '@loadable/component'\nimport Hero from '../components/hero'\nimport SEO from '../components/SEO'\nimport EmailLogic from '../components/emailLogic'\nimport Wrapper from '../components/wrapper'\n\nconst Layout = loadable(() => import('../components/layout'))\n\nconst Contact = ({ className, location }) => {\n  const title = \"Contact\"\n  const { keywords} = siteConfig\n  return (\n    <Layout location={location}>\n      <SEO\n        title={title}\n        keywords={keywords}\n      />\n\n      <Hero\n        heroImg={withPrefix('cover1.png')}\n        title={title}\n      />\n\n      <Wrapper className={className}>\n        <Container className=\"page-content\" fluid>\n            <Row>\n            <Col>\n                <EmailLogic/>\n            </Col>\n            \n            </Row>   \n        </Container>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default styled(Contact)`\n  .page-content {\n    max-width: 100%;\n    margin-bottom: 40px;\n  }\n\n`\n"],"sourceRoot":""}